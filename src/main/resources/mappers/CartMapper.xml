<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dy.mapper.CartMapper">

	<resultMap id="cartResultMap"			type="CartDTO">
		<id		property="idx"				column="idx" />
		<result property="username"			column="username" />
		<result property="code"				column="code" />
		<result property="size"				column="size" />
		<result property="quantity"			column="quantity" />
		<result property="deleteYn"			column="delete_yn" />
		<result property="insertTime"		column="insert_time" />
		<result property="updateTime"		column="update_time" />
		<association property="goods"		resultMap="com.dy.mapper.GoodsMapper.goodsResultMap"/>
	</resultMap>

	<sql id="cartColumns">
		  idx
		, username
		, code
		, size
		, quantity
		, delete_yn
		, insert_time
		, update_time
	</sql>

	<insert id="insertGoodsToCart" parameterType="CartDTO">
		INSERT INTO cart (
			<include refid="cartColumns" />
		) VALUES (
			  #{idx}
			, #{username}
			, #{code}
			, #{size}
			, #{quantity}
			, 'N'
			, NOW()
			, NULL
		)
	</insert>

	<select id="selectGoodsDetailsInCart" parameterType="hashmap" resultMap="cartResultMap">
		SELECT
			<include refid="cartColumns" />
		FROM
			cart
		WHERE
			username = #{username}
		AND
			code = #{code}
	</select>

	<update id="updateGoodsInCart" parameterType="CartDTO">
		UPDATE cart
		SET
			  update_time = NOW()
			, size = #{size}
			, quantity = #{quantity}
		WHERE
			username = #{username}
		AND
			code = #{code}
	</update>

	<update id="deleteGoodsInCart" parameterType="hashmap">
		UPDATE cart
		SET
			  update_time = NOW()
			, delete_yn = 'Y'
		WHERE
			username = #{username}
		AND
			code IN
			<foreach item="code" index="index" collection="codes" open="(" separator="," close=")">
				#{code}
			</foreach>
	</update>

	<select id="selectGoodsListInCart" parameterType="string" resultMap="cartResultMap">
		SELECT 
			  g.code
			, c.size
			, c.quantity
			, g.name
			, g.price
			, s.color
			, s.options
			, a.stored_name
			, a.insert_time
		FROM
			(SELECT 
				g.code, MIN(a.idx) AS idx
			FROM
				goods AS g
			INNER JOIN attach AS a ON g.code = a.code
			GROUP BY g.code) AS first
				INNER JOIN
			attach AS a ON first.idx = a.idx
				INNER JOIN
			goods AS g ON first.code = g.code
				INNER JOIN
				cart AS c ON first.code = c.code
				INNER JOIN
			stock AS s ON first.code = s.code
		WHERE
			c.delete_yn = 'N'
		AND
			c.username = #{username}
		ORDER BY
			  c.idx DESC, c.insert_time DESC
	</select>

	<select id="selectGoodsCountInCart" parameterType="CartDTO" resultType="int">
		SELECT
			COUNT(*)
		FROM
			cart
		WHERE
			delete_yn = 'N'
		AND
			username = #{username}
		AND
			code = #{code}
	</select>

	<select id="selectGoodsCountInCartByUsername" parameterType="string" resultType="int">
		SELECT
			COUNT(*)
		FROM
			cart
		WHERE
			delete_yn = 'N'
		AND
			username = #{username}
	</select>

	<select id="selectTotalAmount" parameterType="string" resultType="int">
		SELECT
			IFNULL(SUM(C.quantity * G.price), 0) AS totalAmount
		FROM
			cart AS C
				INNER JOIN
			goods AS G ON (C.code = G.code)
		WHERE
			(C.delete_yn = 'N' AND G.delete_yn = 'N')
		AND
			C.username = #{username}
	</select>

</mapper>